// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.intel.analytics.zoo.serving.grpc

@SerialVersionUID(0L)
final case class ClusterServingGRPCMetaData(
    modelName: _root_.scala.Predef.String = "",
    modelVersion: _root_.scala.Predef.String = "",
    redisHost: _root_.scala.Predef.String = "",
    redisPort: _root_.scala.Predef.String = "",
    redisInputQueue: _root_.scala.Predef.String = "",
    redisOutputQueue: _root_.scala.Predef.String = "",
    timeWindow: _root_.scala.Int = 0,
    countWindow: _root_.scala.Int = 0,
    redisSecureEnabled: _root_.scala.Boolean = false,
    redisTrustStorePath: _root_.scala.Predef.String = "",
    redisTrustStoreToken: _root_.scala.Predef.String = "",
    features: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ClusterServingGRPCMetaData] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = modelName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = modelVersion
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = redisHost
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = redisPort
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = redisInputQueue
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = redisOutputQueue
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      
      {
        val __value = timeWindow
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(7, __value)
        }
      };
      
      {
        val __value = countWindow
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(8, __value)
        }
      };
      
      {
        val __value = redisSecureEnabled
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(9, __value)
        }
      };
      
      {
        val __value = redisTrustStorePath
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(10, __value)
        }
      };
      
      {
        val __value = redisTrustStoreToken
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(11, __value)
        }
      };
      
      {
        val __value = features
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(12, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = modelName
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = modelVersion
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = redisHost
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = redisPort
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = redisInputQueue
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = redisOutputQueue
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      {
        val __v = timeWindow
        if (__v != 0) {
          _output__.writeInt32(7, __v)
        }
      };
      {
        val __v = countWindow
        if (__v != 0) {
          _output__.writeInt32(8, __v)
        }
      };
      {
        val __v = redisSecureEnabled
        if (__v != false) {
          _output__.writeBool(9, __v)
        }
      };
      {
        val __v = redisTrustStorePath
        if (!__v.isEmpty) {
          _output__.writeString(10, __v)
        }
      };
      {
        val __v = redisTrustStoreToken
        if (!__v.isEmpty) {
          _output__.writeString(11, __v)
        }
      };
      {
        val __v = features
        if (!__v.isEmpty) {
          _output__.writeString(12, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withModelName(__v: _root_.scala.Predef.String): ClusterServingGRPCMetaData = copy(modelName = __v)
    def withModelVersion(__v: _root_.scala.Predef.String): ClusterServingGRPCMetaData = copy(modelVersion = __v)
    def withRedisHost(__v: _root_.scala.Predef.String): ClusterServingGRPCMetaData = copy(redisHost = __v)
    def withRedisPort(__v: _root_.scala.Predef.String): ClusterServingGRPCMetaData = copy(redisPort = __v)
    def withRedisInputQueue(__v: _root_.scala.Predef.String): ClusterServingGRPCMetaData = copy(redisInputQueue = __v)
    def withRedisOutputQueue(__v: _root_.scala.Predef.String): ClusterServingGRPCMetaData = copy(redisOutputQueue = __v)
    def withTimeWindow(__v: _root_.scala.Int): ClusterServingGRPCMetaData = copy(timeWindow = __v)
    def withCountWindow(__v: _root_.scala.Int): ClusterServingGRPCMetaData = copy(countWindow = __v)
    def withRedisSecureEnabled(__v: _root_.scala.Boolean): ClusterServingGRPCMetaData = copy(redisSecureEnabled = __v)
    def withRedisTrustStorePath(__v: _root_.scala.Predef.String): ClusterServingGRPCMetaData = copy(redisTrustStorePath = __v)
    def withRedisTrustStoreToken(__v: _root_.scala.Predef.String): ClusterServingGRPCMetaData = copy(redisTrustStoreToken = __v)
    def withFeatures(__v: _root_.scala.Predef.String): ClusterServingGRPCMetaData = copy(features = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = modelName
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = modelVersion
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = redisHost
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = redisPort
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = redisInputQueue
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = redisOutputQueue
          if (__t != "") __t else null
        }
        case 7 => {
          val __t = timeWindow
          if (__t != 0) __t else null
        }
        case 8 => {
          val __t = countWindow
          if (__t != 0) __t else null
        }
        case 9 => {
          val __t = redisSecureEnabled
          if (__t != false) __t else null
        }
        case 10 => {
          val __t = redisTrustStorePath
          if (__t != "") __t else null
        }
        case 11 => {
          val __t = redisTrustStoreToken
          if (__t != "") __t else null
        }
        case 12 => {
          val __t = features
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(modelName)
        case 2 => _root_.scalapb.descriptors.PString(modelVersion)
        case 3 => _root_.scalapb.descriptors.PString(redisHost)
        case 4 => _root_.scalapb.descriptors.PString(redisPort)
        case 5 => _root_.scalapb.descriptors.PString(redisInputQueue)
        case 6 => _root_.scalapb.descriptors.PString(redisOutputQueue)
        case 7 => _root_.scalapb.descriptors.PInt(timeWindow)
        case 8 => _root_.scalapb.descriptors.PInt(countWindow)
        case 9 => _root_.scalapb.descriptors.PBoolean(redisSecureEnabled)
        case 10 => _root_.scalapb.descriptors.PString(redisTrustStorePath)
        case 11 => _root_.scalapb.descriptors.PString(redisTrustStoreToken)
        case 12 => _root_.scalapb.descriptors.PString(features)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.intel.analytics.zoo.serving.grpc.ClusterServingGRPCMetaData
    // @@protoc_insertion_point(GeneratedMessage[grpc.ClusterServingGRPCMetaData])
}

object ClusterServingGRPCMetaData extends scalapb.GeneratedMessageCompanion[com.intel.analytics.zoo.serving.grpc.ClusterServingGRPCMetaData] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.intel.analytics.zoo.serving.grpc.ClusterServingGRPCMetaData] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.intel.analytics.zoo.serving.grpc.ClusterServingGRPCMetaData = {
    var __modelName: _root_.scala.Predef.String = ""
    var __modelVersion: _root_.scala.Predef.String = ""
    var __redisHost: _root_.scala.Predef.String = ""
    var __redisPort: _root_.scala.Predef.String = ""
    var __redisInputQueue: _root_.scala.Predef.String = ""
    var __redisOutputQueue: _root_.scala.Predef.String = ""
    var __timeWindow: _root_.scala.Int = 0
    var __countWindow: _root_.scala.Int = 0
    var __redisSecureEnabled: _root_.scala.Boolean = false
    var __redisTrustStorePath: _root_.scala.Predef.String = ""
    var __redisTrustStoreToken: _root_.scala.Predef.String = ""
    var __features: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __modelName = _input__.readStringRequireUtf8()
        case 18 =>
          __modelVersion = _input__.readStringRequireUtf8()
        case 26 =>
          __redisHost = _input__.readStringRequireUtf8()
        case 34 =>
          __redisPort = _input__.readStringRequireUtf8()
        case 42 =>
          __redisInputQueue = _input__.readStringRequireUtf8()
        case 50 =>
          __redisOutputQueue = _input__.readStringRequireUtf8()
        case 56 =>
          __timeWindow = _input__.readInt32()
        case 64 =>
          __countWindow = _input__.readInt32()
        case 72 =>
          __redisSecureEnabled = _input__.readBool()
        case 82 =>
          __redisTrustStorePath = _input__.readStringRequireUtf8()
        case 90 =>
          __redisTrustStoreToken = _input__.readStringRequireUtf8()
        case 98 =>
          __features = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.intel.analytics.zoo.serving.grpc.ClusterServingGRPCMetaData(
        modelName = __modelName,
        modelVersion = __modelVersion,
        redisHost = __redisHost,
        redisPort = __redisPort,
        redisInputQueue = __redisInputQueue,
        redisOutputQueue = __redisOutputQueue,
        timeWindow = __timeWindow,
        countWindow = __countWindow,
        redisSecureEnabled = __redisSecureEnabled,
        redisTrustStorePath = __redisTrustStorePath,
        redisTrustStoreToken = __redisTrustStoreToken,
        features = __features,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.intel.analytics.zoo.serving.grpc.ClusterServingGRPCMetaData] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.intel.analytics.zoo.serving.grpc.ClusterServingGRPCMetaData(
        modelName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        modelVersion = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        redisHost = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        redisPort = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        redisInputQueue = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        redisOutputQueue = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        timeWindow = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        countWindow = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        redisSecureEnabled = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        redisTrustStorePath = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        redisTrustStoreToken = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        features = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = FrontEndGRPCProto.javaDescriptor.getMessageTypes().get(6)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = FrontEndGRPCProto.scalaDescriptor.messages(6)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.intel.analytics.zoo.serving.grpc.ClusterServingGRPCMetaData(
    modelName = "",
    modelVersion = "",
    redisHost = "",
    redisPort = "",
    redisInputQueue = "",
    redisOutputQueue = "",
    timeWindow = 0,
    countWindow = 0,
    redisSecureEnabled = false,
    redisTrustStorePath = "",
    redisTrustStoreToken = "",
    features = ""
  )
  implicit class ClusterServingGRPCMetaDataLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.intel.analytics.zoo.serving.grpc.ClusterServingGRPCMetaData]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.intel.analytics.zoo.serving.grpc.ClusterServingGRPCMetaData](_l) {
    def modelName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.modelName)((c_, f_) => c_.copy(modelName = f_))
    def modelVersion: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.modelVersion)((c_, f_) => c_.copy(modelVersion = f_))
    def redisHost: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.redisHost)((c_, f_) => c_.copy(redisHost = f_))
    def redisPort: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.redisPort)((c_, f_) => c_.copy(redisPort = f_))
    def redisInputQueue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.redisInputQueue)((c_, f_) => c_.copy(redisInputQueue = f_))
    def redisOutputQueue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.redisOutputQueue)((c_, f_) => c_.copy(redisOutputQueue = f_))
    def timeWindow: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.timeWindow)((c_, f_) => c_.copy(timeWindow = f_))
    def countWindow: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.countWindow)((c_, f_) => c_.copy(countWindow = f_))
    def redisSecureEnabled: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.redisSecureEnabled)((c_, f_) => c_.copy(redisSecureEnabled = f_))
    def redisTrustStorePath: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.redisTrustStorePath)((c_, f_) => c_.copy(redisTrustStorePath = f_))
    def redisTrustStoreToken: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.redisTrustStoreToken)((c_, f_) => c_.copy(redisTrustStoreToken = f_))
    def features: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.features)((c_, f_) => c_.copy(features = f_))
  }
  final val MODELNAME_FIELD_NUMBER = 1
  final val MODELVERSION_FIELD_NUMBER = 2
  final val REDISHOST_FIELD_NUMBER = 3
  final val REDISPORT_FIELD_NUMBER = 4
  final val REDISINPUTQUEUE_FIELD_NUMBER = 5
  final val REDISOUTPUTQUEUE_FIELD_NUMBER = 6
  final val TIMEWINDOW_FIELD_NUMBER = 7
  final val COUNTWINDOW_FIELD_NUMBER = 8
  final val REDISSECUREENABLED_FIELD_NUMBER = 9
  final val REDISTRUSTSTOREPATH_FIELD_NUMBER = 10
  final val REDISTRUSTSTORETOKEN_FIELD_NUMBER = 11
  final val FEATURES_FIELD_NUMBER = 12
  def of(
    modelName: _root_.scala.Predef.String,
    modelVersion: _root_.scala.Predef.String,
    redisHost: _root_.scala.Predef.String,
    redisPort: _root_.scala.Predef.String,
    redisInputQueue: _root_.scala.Predef.String,
    redisOutputQueue: _root_.scala.Predef.String,
    timeWindow: _root_.scala.Int,
    countWindow: _root_.scala.Int,
    redisSecureEnabled: _root_.scala.Boolean,
    redisTrustStorePath: _root_.scala.Predef.String,
    redisTrustStoreToken: _root_.scala.Predef.String,
    features: _root_.scala.Predef.String
  ): _root_.com.intel.analytics.zoo.serving.grpc.ClusterServingGRPCMetaData = _root_.com.intel.analytics.zoo.serving.grpc.ClusterServingGRPCMetaData(
    modelName,
    modelVersion,
    redisHost,
    redisPort,
    redisInputQueue,
    redisOutputQueue,
    timeWindow,
    countWindow,
    redisSecureEnabled,
    redisTrustStorePath,
    redisTrustStoreToken,
    features
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[grpc.ClusterServingGRPCMetaData])
}
