
// Generated by Akka gRPC. DO NOT EDIT.
package com.intel.analytics.zoo.serving.grpc

import akka.annotation.ApiMayChange


trait GreeterService {
  
  
  def sayHello(in: HelloRequest): scala.concurrent.Future[HelloReply]
  
}



object GreeterService extends akka.grpc.ServiceDescription {
  val name = "grpc.GreeterService"

  val descriptor: com.google.protobuf.Descriptors.FileDescriptor =
    com.intel.analytics.zoo.serving.grpc.GrpcProto.javaDescriptor;

  object Serializers {
    import akka.grpc.scaladsl.ScalapbProtobufSerializer
    
    val HelloRequestSerializer = new ScalapbProtobufSerializer(com.intel.analytics.zoo.serving.grpc.HelloRequest.messageCompanion)
    
    val HelloReplySerializer = new ScalapbProtobufSerializer(com.intel.analytics.zoo.serving.grpc.HelloReply.messageCompanion)
    
  }

  @ApiMayChange
  object MethodDescriptors {
    import akka.grpc.internal.Marshaller
    import io.grpc.MethodDescriptor
    import Serializers._

    
    val sayHelloDescriptor: MethodDescriptor[com.intel.analytics.zoo.serving.grpc.HelloRequest, com.intel.analytics.zoo.serving.grpc.HelloReply] =
      MethodDescriptor.newBuilder()
        .setType(
   MethodDescriptor.MethodType.UNARY 
  
  
  
)
        .setFullMethodName(MethodDescriptor.generateFullMethodName("grpc.GreeterService", "SayHello"))
        .setRequestMarshaller(new Marshaller(HelloRequestSerializer))
        .setResponseMarshaller(new Marshaller(HelloReplySerializer))
        .setSampledToLocalTracing(true)
        .build()
    
  }
}
