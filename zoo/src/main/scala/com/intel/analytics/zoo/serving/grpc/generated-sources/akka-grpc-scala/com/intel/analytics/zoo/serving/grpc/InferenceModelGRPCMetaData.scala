// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.intel.analytics.zoo.serving.grpc

/** @param inputCompileType
  *  direct or instance
  */
@SerialVersionUID(0L)
final case class InferenceModelGRPCMetaData(
    modelName: _root_.scala.Predef.String = "",
    modelVersion: _root_.scala.Predef.String = "",
    modelPath: _root_.scala.Predef.String = "",
    modelType: _root_.scala.Predef.String = "",
    weightPath: _root_.scala.Predef.String = "",
    modelConCurrentNum: _root_.scala.Int = 0,
    inputCompileType: _root_.scala.Predef.String = "",
    features: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[InferenceModelGRPCMetaData] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = modelName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = modelVersion
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = modelPath
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = modelType
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = weightPath
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = modelConCurrentNum
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(6, __value)
        }
      };
      
      {
        val __value = inputCompileType
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
        }
      };
      
      {
        val __value = features
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = modelName
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = modelVersion
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = modelPath
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = modelType
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = weightPath
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = modelConCurrentNum
        if (__v != 0) {
          _output__.writeInt32(6, __v)
        }
      };
      {
        val __v = inputCompileType
        if (!__v.isEmpty) {
          _output__.writeString(7, __v)
        }
      };
      {
        val __v = features
        if (!__v.isEmpty) {
          _output__.writeString(8, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withModelName(__v: _root_.scala.Predef.String): InferenceModelGRPCMetaData = copy(modelName = __v)
    def withModelVersion(__v: _root_.scala.Predef.String): InferenceModelGRPCMetaData = copy(modelVersion = __v)
    def withModelPath(__v: _root_.scala.Predef.String): InferenceModelGRPCMetaData = copy(modelPath = __v)
    def withModelType(__v: _root_.scala.Predef.String): InferenceModelGRPCMetaData = copy(modelType = __v)
    def withWeightPath(__v: _root_.scala.Predef.String): InferenceModelGRPCMetaData = copy(weightPath = __v)
    def withModelConCurrentNum(__v: _root_.scala.Int): InferenceModelGRPCMetaData = copy(modelConCurrentNum = __v)
    def withInputCompileType(__v: _root_.scala.Predef.String): InferenceModelGRPCMetaData = copy(inputCompileType = __v)
    def withFeatures(__v: _root_.scala.Predef.String): InferenceModelGRPCMetaData = copy(features = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = modelName
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = modelVersion
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = modelPath
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = modelType
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = weightPath
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = modelConCurrentNum
          if (__t != 0) __t else null
        }
        case 7 => {
          val __t = inputCompileType
          if (__t != "") __t else null
        }
        case 8 => {
          val __t = features
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(modelName)
        case 2 => _root_.scalapb.descriptors.PString(modelVersion)
        case 3 => _root_.scalapb.descriptors.PString(modelPath)
        case 4 => _root_.scalapb.descriptors.PString(modelType)
        case 5 => _root_.scalapb.descriptors.PString(weightPath)
        case 6 => _root_.scalapb.descriptors.PInt(modelConCurrentNum)
        case 7 => _root_.scalapb.descriptors.PString(inputCompileType)
        case 8 => _root_.scalapb.descriptors.PString(features)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.intel.analytics.zoo.serving.grpc.InferenceModelGRPCMetaData
    // @@protoc_insertion_point(GeneratedMessage[grpc.InferenceModelGRPCMetaData])
}

object InferenceModelGRPCMetaData extends scalapb.GeneratedMessageCompanion[com.intel.analytics.zoo.serving.grpc.InferenceModelGRPCMetaData] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.intel.analytics.zoo.serving.grpc.InferenceModelGRPCMetaData] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.intel.analytics.zoo.serving.grpc.InferenceModelGRPCMetaData = {
    var __modelName: _root_.scala.Predef.String = ""
    var __modelVersion: _root_.scala.Predef.String = ""
    var __modelPath: _root_.scala.Predef.String = ""
    var __modelType: _root_.scala.Predef.String = ""
    var __weightPath: _root_.scala.Predef.String = ""
    var __modelConCurrentNum: _root_.scala.Int = 0
    var __inputCompileType: _root_.scala.Predef.String = ""
    var __features: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __modelName = _input__.readStringRequireUtf8()
        case 18 =>
          __modelVersion = _input__.readStringRequireUtf8()
        case 26 =>
          __modelPath = _input__.readStringRequireUtf8()
        case 34 =>
          __modelType = _input__.readStringRequireUtf8()
        case 42 =>
          __weightPath = _input__.readStringRequireUtf8()
        case 48 =>
          __modelConCurrentNum = _input__.readInt32()
        case 58 =>
          __inputCompileType = _input__.readStringRequireUtf8()
        case 66 =>
          __features = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.intel.analytics.zoo.serving.grpc.InferenceModelGRPCMetaData(
        modelName = __modelName,
        modelVersion = __modelVersion,
        modelPath = __modelPath,
        modelType = __modelType,
        weightPath = __weightPath,
        modelConCurrentNum = __modelConCurrentNum,
        inputCompileType = __inputCompileType,
        features = __features,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.intel.analytics.zoo.serving.grpc.InferenceModelGRPCMetaData] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.intel.analytics.zoo.serving.grpc.InferenceModelGRPCMetaData(
        modelName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        modelVersion = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        modelPath = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        modelType = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        weightPath = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        modelConCurrentNum = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        inputCompileType = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        features = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = FrontEndGRPCProto.javaDescriptor.getMessageTypes().get(5)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = FrontEndGRPCProto.scalaDescriptor.messages(5)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.intel.analytics.zoo.serving.grpc.InferenceModelGRPCMetaData(
    modelName = "",
    modelVersion = "",
    modelPath = "",
    modelType = "",
    weightPath = "",
    modelConCurrentNum = 0,
    inputCompileType = "",
    features = ""
  )
  implicit class InferenceModelGRPCMetaDataLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.intel.analytics.zoo.serving.grpc.InferenceModelGRPCMetaData]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.intel.analytics.zoo.serving.grpc.InferenceModelGRPCMetaData](_l) {
    def modelName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.modelName)((c_, f_) => c_.copy(modelName = f_))
    def modelVersion: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.modelVersion)((c_, f_) => c_.copy(modelVersion = f_))
    def modelPath: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.modelPath)((c_, f_) => c_.copy(modelPath = f_))
    def modelType: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.modelType)((c_, f_) => c_.copy(modelType = f_))
    def weightPath: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.weightPath)((c_, f_) => c_.copy(weightPath = f_))
    def modelConCurrentNum: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.modelConCurrentNum)((c_, f_) => c_.copy(modelConCurrentNum = f_))
    def inputCompileType: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.inputCompileType)((c_, f_) => c_.copy(inputCompileType = f_))
    def features: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.features)((c_, f_) => c_.copy(features = f_))
  }
  final val MODELNAME_FIELD_NUMBER = 1
  final val MODELVERSION_FIELD_NUMBER = 2
  final val MODELPATH_FIELD_NUMBER = 3
  final val MODELTYPE_FIELD_NUMBER = 4
  final val WEIGHTPATH_FIELD_NUMBER = 5
  final val MODELCONCURRENTNUM_FIELD_NUMBER = 6
  final val INPUTCOMPILETYPE_FIELD_NUMBER = 7
  final val FEATURES_FIELD_NUMBER = 8
  def of(
    modelName: _root_.scala.Predef.String,
    modelVersion: _root_.scala.Predef.String,
    modelPath: _root_.scala.Predef.String,
    modelType: _root_.scala.Predef.String,
    weightPath: _root_.scala.Predef.String,
    modelConCurrentNum: _root_.scala.Int,
    inputCompileType: _root_.scala.Predef.String,
    features: _root_.scala.Predef.String
  ): _root_.com.intel.analytics.zoo.serving.grpc.InferenceModelGRPCMetaData = _root_.com.intel.analytics.zoo.serving.grpc.InferenceModelGRPCMetaData(
    modelName,
    modelVersion,
    modelPath,
    modelType,
    weightPath,
    modelConCurrentNum,
    inputCompileType,
    features
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[grpc.InferenceModelGRPCMetaData])
}
